FROM golang:1.22-alpine AS builder

# Set working directory
WORKDIR /app

# Install git and build tools (needed for Go modules and CGO)
RUN apk add --no-cache git gcc musl-dev

# Copy go mod files
COPY go.mod go.sum ./

# Download dependencies
RUN go mod download

# Copy source code
COPY . .

# Build the Lambda application for x86_64 architecture
RUN CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build -a -installsuffix cgo -o main cmd/lambda/main.go

# Lambda stage - use AWS Lambda Go base image
FROM public.ecr.aws/lambda/go:1

# Copy the Lambda binary from builder stage
COPY --from=builder /app/main ${LAMBDA_TASK_ROOT}

# Copy configuration files
COPY --from=builder /app/configs ${LAMBDA_TASK_ROOT}/configs

# Copy site assets (for static file serving if needed)
COPY --from=builder /app/site ${LAMBDA_TASK_ROOT}/site

# Set the CMD to your handler
CMD [ "main" ]